/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/ui/checkbox.tsx":
/*!************************************!*\
  !*** ./components/ui/checkbox.tsx ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\";\n// import * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\n// import { Check } from \"lucide-react\";\n// import * as React from \"react\";\n// import { cn } from \"@/lib/utils\";\n// const Checkbox = React.forwardRef<\n//   React.ElementRef<typeof CheckboxPrimitive.Root>,\n//   React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n// >(({ className, ...props }, ref) => (\n//   <CheckboxPrimitive.Root\n//     ref={ref}\n//     className={cn(\n//       \"peer h-4 w-4 shrink-0 rounded-sm border border-slate-200 border-slate-900 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-slate-900 data-[state=checked]:text-slate-50 dark:border-slate-800 dark:border-slate-50 dark:ring-offset-slate-950 dark:focus-visible:ring-slate-300 dark:data-[state=checked]:bg-slate-50 dark:data-[state=checked]:text-slate-900\",\n//       className\n//     )}\n//     {...props}\n//   >\n//     <CheckboxPrimitive.Indicator\n//       className={cn(\"flex items-center justify-center text-current\")}\n//     >\n//       <Check className=\"size-4\" />\n//     </CheckboxPrimitive.Indicator>\n//   </CheckboxPrimitive.Root>\n// ));\n// Checkbox.displayName = CheckboxPrimitive.Root.displayName;\n// export { Checkbox };\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdWkvY2hlY2tib3gudHN4IiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUVoQixpRUFBaUU7QUFDakUsd0NBQXdDO0FBQ3hDLGtDQUFrQztBQUVsQyxvQ0FBb0M7QUFFcEMscUNBQXFDO0FBQ3JDLHFEQUFxRDtBQUNyRCxrRUFBa0U7QUFDbEUsd0NBQXdDO0FBQ3hDLDRCQUE0QjtBQUM1QixnQkFBZ0I7QUFDaEIscUJBQXFCO0FBQ3JCLDRmQUE0ZjtBQUM1ZixrQkFBa0I7QUFDbEIsU0FBUztBQUNULGlCQUFpQjtBQUNqQixNQUFNO0FBQ04sbUNBQW1DO0FBQ25DLHdFQUF3RTtBQUN4RSxRQUFRO0FBQ1IscUNBQXFDO0FBQ3JDLHFDQUFxQztBQUNyQyw4QkFBOEI7QUFDOUIsTUFBTTtBQUNOLDZEQUE2RDtBQUU3RCx1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy91aS9jaGVja2JveC50c3g/NDFlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBcInVzZSBjbGllbnRcIjtcblxuLy8gaW1wb3J0ICogYXMgQ2hlY2tib3hQcmltaXRpdmUgZnJvbSBcIkByYWRpeC11aS9yZWFjdC1jaGVja2JveFwiO1xuLy8gaW1wb3J0IHsgQ2hlY2sgfSBmcm9tIFwibHVjaWRlLXJlYWN0XCI7XG4vLyBpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuLy8gaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIjtcblxuLy8gY29uc3QgQ2hlY2tib3ggPSBSZWFjdC5mb3J3YXJkUmVmPFxuLy8gICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBDaGVja2JveFByaW1pdGl2ZS5Sb290Pixcbi8vICAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBDaGVja2JveFByaW1pdGl2ZS5Sb290PlxuLy8gPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxuLy8gICA8Q2hlY2tib3hQcmltaXRpdmUuUm9vdFxuLy8gICAgIHJlZj17cmVmfVxuLy8gICAgIGNsYXNzTmFtZT17Y24oXG4vLyAgICAgICBcInBlZXIgaC00IHctNCBzaHJpbmstMCByb3VuZGVkLXNtIGJvcmRlciBib3JkZXItc2xhdGUtMjAwIGJvcmRlci1zbGF0ZS05MDAgcmluZy1vZmZzZXQtd2hpdGUgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgZm9jdXMtdmlzaWJsZTpyaW5nLTIgZm9jdXMtdmlzaWJsZTpyaW5nLXNsYXRlLTk1MCBmb2N1cy12aXNpYmxlOnJpbmctb2Zmc2V0LTIgZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkIGRpc2FibGVkOm9wYWNpdHktNTAgZGF0YS1bc3RhdGU9Y2hlY2tlZF06Ymctc2xhdGUtOTAwIGRhdGEtW3N0YXRlPWNoZWNrZWRdOnRleHQtc2xhdGUtNTAgZGFyazpib3JkZXItc2xhdGUtODAwIGRhcms6Ym9yZGVyLXNsYXRlLTUwIGRhcms6cmluZy1vZmZzZXQtc2xhdGUtOTUwIGRhcms6Zm9jdXMtdmlzaWJsZTpyaW5nLXNsYXRlLTMwMCBkYXJrOmRhdGEtW3N0YXRlPWNoZWNrZWRdOmJnLXNsYXRlLTUwIGRhcms6ZGF0YS1bc3RhdGU9Y2hlY2tlZF06dGV4dC1zbGF0ZS05MDBcIixcbi8vICAgICAgIGNsYXNzTmFtZVxuLy8gICAgICl9XG4vLyAgICAgey4uLnByb3BzfVxuLy8gICA+XG4vLyAgICAgPENoZWNrYm94UHJpbWl0aXZlLkluZGljYXRvclxuLy8gICAgICAgY2xhc3NOYW1lPXtjbihcImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRleHQtY3VycmVudFwiKX1cbi8vICAgICA+XG4vLyAgICAgICA8Q2hlY2sgY2xhc3NOYW1lPVwic2l6ZS00XCIgLz5cbi8vICAgICA8L0NoZWNrYm94UHJpbWl0aXZlLkluZGljYXRvcj5cbi8vICAgPC9DaGVja2JveFByaW1pdGl2ZS5Sb290PlxuLy8gKSk7XG4vLyBDaGVja2JveC5kaXNwbGF5TmFtZSA9IENoZWNrYm94UHJpbWl0aXZlLlJvb3QuZGlzcGxheU5hbWU7XG5cbi8vIGV4cG9ydCB7IENoZWNrYm94IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ui/checkbox.tsx\n"));

/***/ })

});